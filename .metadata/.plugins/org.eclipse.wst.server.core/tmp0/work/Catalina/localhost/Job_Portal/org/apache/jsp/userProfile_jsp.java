/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.0-M7
 * Generated at: 2025-04-24 08:14:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.model.UserModel;

public final class userProfile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.model.UserModel");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

UserModel model = (UserModel) session.getAttribute("model"); // You might get this from login logic

// Check if session is invalid or user is not logged in
if (model == null) {
	response.sendRedirect("userLogin.jsp");
	return;
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>User Profile</title>\r\n");
      out.write("<!-- Link to Cropper.js CSS -->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Fonts poppins -->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("/* Reset */\r\n");
      out.write("* {\r\n");
      out.write("\tbox-sizing: border-box;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("\theight: 100vh;\r\n");
      out.write("\tbackground-color: #f4f6f9;\r\n");
      out.write("\tfont-family: 'Poppins', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Card container */\r\n");
      out.write(".card {\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tflex-direction: column;\r\n");
      out.write("\talign-items: flex-start;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\twidth: 520px;\r\n");
      out.write("\tpadding: 40px 35px;\r\n");
      out.write("\tborder-radius: 20px;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tbox-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\r\n");
      out.write("\tbackground-color: #ffffff;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\ttransition: all 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card:hover {\r\n");
      out.write("\tbox-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* User Details */\r\n");
      out.write(".user-details h1 {\r\n");
      out.write("\tmargin-bottom: 25px;\r\n");
      out.write("\tcolor: #222;\r\n");
      out.write("\tfont-size: 38px;\r\n");
      out.write("\tfont-weight: 600;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-details p {\r\n");
      out.write("\tmargin: 12px 0;\r\n");
      out.write("\tcolor: #555;\r\n");
      out.write("\tfont-size: 17px;\r\n");
      out.write("\tline-height: 1.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-details p strong {\r\n");
      out.write("\tcolor: #000;\r\n");
      out.write("\tfont-weight: 600;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Profile Picture Upload */\r\n");
      out.write(".upload-container {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 30px;\r\n");
      out.write("\tright: 30px;\r\n");
      out.write("\twidth: 90px;\r\n");
      out.write("\theight: 90px;\r\n");
      out.write("\tborder-radius: 50%;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tborder: 3px solid #007BFF;\r\n");
      out.write("\tbackground: #f1f1f1;\r\n");
      out.write("\tbox-shadow: 0 0 12px rgba(0, 123, 255, 0.2);\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\ttransition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".upload-container:hover {\r\n");
      out.write("\ttransform: scale(1.05);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".upload-container img {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tobject-fit: cover;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Modal Styles */\r\n");
      out.write(".modal {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tbackground: rgba(0, 0, 0, 0.6);\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("\tz-index: 1000;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tpadding: 25px 30px;\r\n");
      out.write("\tborder-radius: 12px;\r\n");
      out.write("\twidth: 90%;\r\n");
      out.write("\tmax-width: 500px;\r\n");
      out.write("\tbox-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content h3 {\r\n");
      out.write("\tmargin-bottom: 20px;\r\n");
      out.write("\tcolor: #333;\r\n");
      out.write("\tfont-size: 20px;\r\n");
      out.write("\tfont-weight: 500;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content img {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-btns {\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tjustify-content: space-between;\r\n");
      out.write("\tmargin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-btns button {\r\n");
      out.write("\tpadding: 10px 20px;\r\n");
      out.write("\tbackground-color: #007BFF;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tborder-radius: 6px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tfont-size: 14px;\r\n");
      out.write("\ttransition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-btns button:hover {\r\n");
      out.write("\tbackground-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Action Buttons */\r\n");
      out.write(".card-btn-container {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tjustify-content: flex-end;\r\n");
      out.write("\tgap: 15px;\r\n");
      out.write("\tmargin-top: 35px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".edit-btn, .delete-btn {\r\n");
      out.write("\tpadding: 12px 24px;\r\n");
      out.write("\tfont-size: 16px;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tborder-radius: 8px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tfont-weight: 500;\r\n");
      out.write("\ttransition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Edit Button */\r\n");
      out.write(".edit-btn {\r\n");
      out.write("\tbackground-color: #007BFF;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".edit-btn:hover {\r\n");
      out.write("\tbackground-color: #0056b3;\r\n");
      out.write("\ttransform: translateY(-2px);\r\n");
      out.write("\tbox-shadow: 0 4px 10px rgba(0, 123, 255, 0.25);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Delete Button */\r\n");
      out.write(".delete-btn {\r\n");
      out.write("\tbackground-color: #dc3545;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".delete-btn:hover {\r\n");
      out.write("\tbackground-color: #a71d2a;\r\n");
      out.write("\ttransform: translateY(-2px);\r\n");
      out.write("\tbox-shadow: 0 4px 10px rgba(220, 53, 69, 0.25);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"card\">\r\n");
      out.write("\t\t<!-- User Details Section -->\r\n");
      out.write("\t\t<div class=\"user-details\">\r\n");
      out.write("\t\t\t<h1>User Profile</h1>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>Full Name:</strong>\r\n");
      out.write("\t\t\t\t");
      out.print(model.getFirstName());
      out.write("\r\n");
      out.write("\t\t\t\t");
      out.print(model.getLastName());
      out.write("</p>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>Email:</strong>\r\n");
      out.write("\t\t\t\t");
      out.print(model.getEmail());
      out.write("</p>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>Age:</strong>\r\n");
      out.write("\t\t\t\t");
      out.print(model.getAge());
      out.write("</p>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>Gender:</strong>\r\n");
      out.write("\t\t\t\t");
      out.print(model.getGender());
      out.write("</p>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>Address:</strong>\r\n");
      out.write("\t\t\t\t");
      out.print(model.getAddress());
      out.write("</p>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>Phone Number:</strong>\r\n");
      out.write("\t\t\t\t");
      out.print(model.getPhone());
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Also Add Education, Experience -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Profile Picture Upload -->\r\n");
      out.write("\t\t<div class=\"upload-container\">\r\n");
      out.write("\t\t\t<p style=\"font-size: 10px;\">No Image</p>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Button Container -->\r\n");
      out.write("\t\t<div class=\"card-btn-container\">\r\n");
      out.write("\t\t\t<button class=\"edit-btn\" name=\"action\" value=\"editProfile\"\r\n");
      out.write("\t\t\t\tonclick=\"window.location.href='editUserProfile.jsp'\">Edit\r\n");
      out.write("\t\t\t\tProfile</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form id=\"deleteForm\" action=\"UserController\" method=\"post\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"action\" value=\"deleteUserProfile\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"delete-btn\" onclick=\"confirmDelete()\">Delete\r\n");
      out.write("\t\t\t\t\tProfile</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Alert for user delete profile -->\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction confirmDelete() {\r\n");
      out.write("\t\t\tif (confirm(\"Are you sure you want to delete your profile?\")) {\r\n");
      out.write("\t\t\t\t// Submit the form only if confirmed\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"deleteForm\").submit();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
