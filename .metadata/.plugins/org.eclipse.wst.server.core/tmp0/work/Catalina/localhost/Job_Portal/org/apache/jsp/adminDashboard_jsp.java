/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.0-M7
 * Generated at: 2025-04-23 05:45:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.model.CompanyModel;

public final class adminDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.model.CompanyModel");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Admin Dashboard</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("\tfont-family: 'Poppins', sans-serif;\r\n");
      out.write("\tbackground-color: #f8f9fa;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("\tmargin-top: 30px;\r\n");
      out.write("\tbackground-color: white;\r\n");
      out.write("\tbox-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("\tborder: 2px solid black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("\tpadding: 12px 15px;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\tbackground-color: #2c3e50;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr:hover {\r\n");
      out.write("\tbackground-color: #f1f1f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a:hover {\r\n");
      out.write("\ttext-decoration: underline;\r\n");
      out.write("\tcolor: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("\tpadding: 6px 12px;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tfont-weight: 500;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".approve-btn {\r\n");
      out.write("\tbackground-color: #28a745;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".approve-btn:hover {\r\n");
      out.write("\tbackground-color: #218838;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".reject-btn {\r\n");
      out.write("\tbackground-color: #dc3545;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".reject-btn:hover {\r\n");
      out.write("\tbackground-color: #c82333;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h2>Company List</h2>\r\n");
      out.write("\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>ID</th>\r\n");
      out.write("\t\t\t\t<th>Name</th>\r\n");
      out.write("\t\t\t\t<th>Email</th>\r\n");
      out.write("\t\t\t\t<th>Address</th>\r\n");
      out.write("\t\t\t\t<th>Phone</th>\r\n");
      out.write("\t\t\t\t<th>Website</th>\r\n");
      out.write("\t\t\t\t<th>isApproved</th>\r\n");
      out.write("\t\t\t\t<th>isActive</th>\r\n");
      out.write("\t\t\t\t<th>Actions</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t\t");

			List<CompanyModel> companyList = (List<CompanyModel>) request.getAttribute("companyList");
			if (companyList != null && !companyList.isEmpty()) {
				for (CompanyModel company : companyList) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(company.getCompanyid());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(company.getName());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(company.getEmail());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(company.getAddress());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(company.getPhone());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td><a href=\"");
      out.print(company.getWebsite());
      out.write("\" target=\"_blank\"\r\n");
      out.write("\t\t\t\t\tstyle=\"color: #007bff; text-decoration: none;\"> ");
      out.print(company.getWebsite());
      out.write("\r\n");
      out.write("\t\t\t\t</a></td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(company.isApproved() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(company.isActive() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<form action=\"AdminController\" method=\"post\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"display: inline;\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"companyId\"\r\n");
      out.write("\t\t\t\t\t\t\tvalue=\"");
      out.print(company.getCompanyid());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" name=\"action\" value=\"approve\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn approve-btn\">Approve</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" name=\"action\" value=\"reject\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn reject-btn\">Reject</button>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

			}
			} else {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"7\" style=\"text-align: center;\">No companies found.</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

			}
			
      out.write("\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Footer Start -->\r\n");
      out.write("\t");

    	request.setAttribute("footerStyle", "position: fixed; bottom: 0; width: 100%; padding: 10px 0; background-color: #f0f2f5; color: #000000; text-align: center; font-size: 12px; font-family: 'Poppins', sans-serif;");
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t<!-- Footer End -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
