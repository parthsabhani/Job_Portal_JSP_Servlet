package com.controller;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import com.dao.UserDao;
import com.model.EducationModel;
import com.model.ProjectModel;
import com.model.UserModel;

@WebServlet("/UserController")
public class UserController extends HttpServlet 
{
	private static final long serialVersionUID = 1L;
    public UserController() {
        super();

    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException 
	{
	
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException 
	{
		String action = request.getParameter("action");
		System.out.println("Action : " + action);
		UserDao userDao =  new UserDao();
		
		if(action.equalsIgnoreCase("register"))
		{
			UserModel rmodel = new UserModel();
			
			rmodel.setFirstName(request.getParameter("firstName"));
			rmodel.setLastName(request.getParameter("lastName"));
			
			String email = request.getParameter("email");
			if(new UserDao().isEmailExist(email)) 
			{				
				request.setAttribute("error", "email already exists");
				request.getRequestDispatcher("userRegistration.jsp").forward(request, response);
			}
			else
			{		
//				System.out.println("email added");
				rmodel.setEmail(email);
			}
			
			String ageParam = request.getParameter("age");
			if (ageParam != null && !ageParam.isEmpty()) {
			    rmodel.setAge(Integer.parseInt(ageParam));
			} else {
			    rmodel.setAge(0); // no age input
			}
			
			String gender = request.getParameter("gender");
			if (gender != null && !gender.isEmpty()) {
				rmodel.setGender(gender);
			} else {
				rmodel.setGender(null); // gender not entered
			}
			
			rmodel.setAddress(request.getParameter("address"));
			rmodel.setPhone(request.getParameter("phone"));
			rmodel.setPassword(request.getParameter("password"));
			
			int x = new UserDao().userRegistration(rmodel);
			
			if(x > 0)
			{
				response.sendRedirect("userLogin.jsp");
			}else
			{
				response.sendRedirect("userRegistration.jsp");	
			}
			
		} else if(action.equalsIgnoreCase("login"))
		{
			UserModel lmodel = new UserModel();
			lmodel.setEmail(request.getParameter("email"));
			lmodel.setPassword(request.getParameter("password"));
			
			UserModel model = userDao.userLogin(lmodel.getEmail(), lmodel.getPassword());
			if(model != null)
			{
				EducationModel emodel = userDao.getUserEducation(model.getUserid());
				Map<String, Object> userProjects= userDao.getUserProject(model.getUserid());
				System.out.println(userProjects);
			
				if(emodel != null)
				{
					HttpSession session = request.getSession();
					session.setAttribute("model", model);
					session.setAttribute("emodel", emodel);
					session.setAttribute("userProjects", userProjects);
					session.setAttribute("role", "user");
					response.sendRedirect("userDashboard.jsp");
				}else
				{
					response.sendRedirect("userLogin.jsp?error=invalid email and password");
				}
			}
		}
		else if(action.equalsIgnoreCase("deleteUserProfile"))
		{
			HttpSession session = request.getSession(false);
			if (session == null) {
	            response.sendRedirect("userLogin.jsp");  // Redirect to login page if session is invalid
	            return;
	        }
			
			UserModel model = (UserModel) session.getAttribute("model");
			if (model == null) {
	            response.sendRedirect("userLogin.jsp");  // Redirect to login page if no user found in session
	            return;
	        }
			
			int x = new UserDao().deleteUserProfile(model.getUserid());
			
			if(x > 0)
			{
				response.sendRedirect("userRegistration.jsp");
			}else
			{
				response.sendRedirect("userLogin.jsp?error=user not deleted..");
			}
			
			session.invalidate();
		}
		
	}

}
 