<%@page import="com.model.UserModel"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>

<%
UserModel model = (UserModel) session.getAttribute("model"); // You might get this from login logic

// Check if session is invalid or user is not logged in
if (model == null) {
	response.sendRedirect("userLogin.jsp");
	return;
}
request.setAttribute("firstname", model.getFirstName());
request.setAttribute("lastname", model.getLastName());
%>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>User Profile</title>
<!-- Link to Cropper.js CSS -->
<link
	href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
	rel="stylesheet">

<!-- Fonts poppins -->
<link
	href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap"
	rel="stylesheet">
<style>
/* Reset */
* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
	background: linear-gradient(135deg, #e0eafc, #cfdef3);
	font-family: 'Poppins', sans-serif;
}

/* Card container */
.card {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: center;
	width: 520px;
	padding: 40px 35px;
	border-radius: 20px;
	border: none;
	box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
	background-color: #ffffff;
	position: relative;
	transition: all 0.3s ease-in-out;
}

.card:hover {
	box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

/* User Details */
.user-details h1 {
	margin-bottom: 25px;
	color: #222;
	font-size: 38px;
	font-weight: 600;
}

.user-details p {
	margin: 12px 0;
	color: #555;
	font-size: 17px;
	line-height: 1.6;
}

.user-details p strong {
	color: #000;
	font-weight: 600;
}

/* Profile Picture Upload */
.upload-container {
	position: absolute;
	top: 30px;
	right: 30px;
	width: 90px;
	height: 90px;
	border-radius: 50%;
	overflow: hidden;
	border: 3px solid #007BFF;
	background: #f1f1f1;
	box-shadow: 0 0 12px rgba(0, 123, 255, 0.2);
	display: flex;
	justify-content: center;
	align-items: center;
	cursor: pointer;
	transition: all 0.3s ease;
}

.upload-container:hover {
	transform: scale(1.05);
}

.upload-container img {
	width: 100%;
	height: 100%;
	object-fit: cover;
}

/* Modal Styles */
.modal {
	display: none;
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: rgba(0, 0, 0, 0.6);
	justify-content: center;
	align-items: center;
	z-index: 1000;
}

.modal-content {
	background: #fff;
	padding: 25px 30px;
	border-radius: 12px;
	width: 90%;
	max-width: 500px;
	box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
}

.modal-content h3 {
	margin-bottom: 20px;
	color: #333;
	font-size: 20px;
	font-weight: 500;
}

.modal-content img {
	width: 100%;
	border-radius: 10px;
}

.modal-btns {
	display: flex;
	justify-content: space-between;
	margin-top: 20px;
}

.modal-btns button {
	padding: 10px 20px;
	background-color: #007BFF;
	color: white;
	border: none;
	border-radius: 6px;
	cursor: pointer;
	font-size: 14px;
	transition: background-color 0.3s ease;
}

.modal-btns button:hover {
	background-color: #0056b3;
}

/* Action Buttons */
.card-btn-container {
	width: 100%;
	display: flex;
	justify-content: flex-end;
	gap: 15px;
	margin-top: 35px;
}

.edit-btn, .delete-btn {
	padding: 12px 24px;
	font-size: 16px;
	border: none;
	border-radius: 8px;
	cursor: pointer;
	font-weight: 500;
	transition: all 0.3s ease;
}

/* Edit Button */
.edit-btn {
	background-color: #007BFF;
	color: #fff;
}

.edit-btn:hover {
	background-color: #0056b3;
	transform: translateY(-2px);
	box-shadow: 0 4px 10px rgba(0, 123, 255, 0.25);
}

/* Delete Button */
.delete-btn {
	background-color: #dc3545;
	color: #fff;
}

.delete-btn:hover {
	background-color: #a71d2a;
	transform: translateY(-2px);
	box-shadow: 0 4px 10px rgba(220, 53, 69, 0.25);
}

</style>
</head>
<body>

	<div class="card">
		<!-- User Details Section -->
		<div class="user-details">
			<h1>User Profile</h1>
			
			<p>
				<strong>Full Name:</strong>
				<%=model.getFirstName()%>
				<%=model.getLastName()%></p>
			<p>
				<strong>Email:</strong>
				<%=model.getEmail()%></p>
			<p>
				<strong>Age:</strong>
				<%=model.getAge()%></p>
			<p>
				<strong>Gender:</strong>
				<%=model.getGender()%></p>
			<p>
				<strong>Address:</strong>
				<%=model.getAddress()%></p>
				<p>
				<strong>Address:</strong>
				<%=model.getAddress()%></p>
				<p>
				<strong>Address:</strong>
				<%=model.getAddress()%></p>
			<p>
				<strong>Phone Number:</strong>
				<%=model.getPhone()%></p>


			<!-- Also Add Education, Experience -->


		</div>

		<!-- Profile Picture Upload -->
		<div class="upload-container">
			<p style="font-size: 10px;">No Image</p>
<%-- <% if (model.getProfileImagePath() != null && !model.getProfileImagePath().isEmpty()) { %>
    <div class="upload-container">
        <img id="profileImage" src="<%= model.getProfileImagePath() %>" alt="Profile Picture">
    </div>
<% } %> --%>
			
		</div>
		
		

		<!-- Button Container -->
		<div class="card-btn-container">
			<button class="edit-btn" name="action" value="editProfile">
				Edit Profile</button>
			<button class="delete-btn" name="action" value="deleteProfile">
				Delete Profile</button>
		</div>

	</div>

	<!-- Modal for Cropping -->
	<div id="cropModal" class="modal">
		<div class="modal-content">
			<h3>Edit Profile Picture</h3>
			<img id="cropImage" src="" alt="Image to Crop">
			<div class="modal-btns">
				<button id="cancelBtn">Cancel</button>
				<button id="saveBtn">Save</button>
			</div>
		</div>

	</div>

	<!-- Script for cropping functionality -->
	<script
		src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
	<script>
		let cropper;
		const uploadBtn = document.getElementById('uploadBtn');
		const fileInput = document.getElementById('fileInput');
		const cropModal = document.getElementById('cropModal');
		const cropImage = document.getElementById('cropImage');
		const saveBtn = document.getElementById('saveBtn');
		const cancelBtn = document.getElementById('cancelBtn');
		const profileImage = document.getElementById('profileImage');

		// Trigger file input when upload button is clicked
		uploadBtn.addEventListener('click', function() {
			fileInput.click();
		});

		// Handle file input change event
		fileInput.addEventListener('change', function(event) {
			const file = event.target.files[0];
			if (file) {
				const reader = new FileReader();
				reader.onload = function(e) {
					cropImage.src = e.target.result;
					cropModal.style.display = 'flex';
					cropper = new Cropper(cropImage, {
						aspectRatio : 1,
						viewMode : 1,
						autoCropArea : 0.8,
					});
				};
				reader.readAsDataURL(file);
			}
		});

		// Save cropped image
		saveBtn.addEventListener('click', function() {
			const canvas = cropper.getCroppedCanvas();
			const croppedImageUrl = canvas.toDataURL();
			profileImage.src = croppedImageUrl;
			cropModal.style.display = 'none';
			cropper.destroy();
		});

		// Cancel cropping
		cancelBtn.addEventListener('click', function() {
			cropModal.style.display = 'none';
			if (cropper) {
				cropper.destroy();
			}
		});
	</script>

</body>
</html>
